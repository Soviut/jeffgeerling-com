<?php

/**
 * @file
 * Theme customizations for Jeff Geerling's website.
 */

use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements template_preprocess_html().
 */
function jeffgeerling_preprocess_html(&$variables) {
  $path_matcher = \Drupal::service('path.matcher');

  if ($path_matcher->isFrontPage()) {
    // Override the page title on the front page.
    $site_config = \Drupal::config('system.site');
    $head_title = [
      'name' => $site_config->get('name'),
      'slogan' => strip_tags($site_config->get('slogan')),
    ];
    $variables['head_title_array'] = $head_title;
    $variables['head_title'] = implode(' - ', $head_title);
  }

  // Add favicon meta tags.
  $variables['page']['#attached']['html_head'][] = [
    [
      '#tag' => 'link',
      '#attributes' => [
        'rel' => 'apple-touch-icon',
        'sizes' => '180x180',
        'href' => '/apple-touch-icon.png',
      ],
    ],
    'apple-touch-icon',
  ];
  $variables['page']['#attached']['html_head'][] = [
    [
      '#tag' => 'link',
      '#attributes' => [
        'rel' => 'icon',
        'type' => 'image/png',
        'sizes' => '32x32',
        'href' => '/favicon-32x32.png',
      ],
    ],
    'favicon-3232',
  ];
  $variables['page']['#attached']['html_head'][] = [
    [
      '#tag' => 'link',
      '#attributes' => [
        'rel' => 'icon',
        'type' => 'image/png',
        'sizes' => '16x16',
        'href' => '/favicon-16x16.png',
      ],
    ],
    'favicon-1616',
  ];
  $variables['page']['#attached']['html_head'][] = [
    [
      '#tag' => 'link',
      '#attributes' => [
        'rel' => 'manifest',
        'href' => '/site.webmanifest',
      ],
    ],
    'site-manifest',
  ];
  $variables['page']['#attached']['html_head'][] = [
    [
      '#tag' => 'link',
      '#attributes' => [
        'rel' => 'mask-icon',
        'href' => '/safari-pinned-tab.svg',
        'color' => '#333333',
      ],
    ],
    'safari-pinned-tab',
  ];
}

/**
 * Implements template_preprocess_page().
 */
function jeffgeerling_preprocess_page(&$variables) {
  // Add front page assets.
  if ($variables['is_front']) {
    $variables['#attached']['library'][] = 'jeffgeerling/front';
  }

  // Add blog assets on comment reply route.
  if (\Drupal::routeMatch()->getRouteName() == 'comment.reply') {
    $variables['#attached']['library'][] = 'jeffgeerling/blog';
  }
}

/**
 * Implements hook_preprocess_node().
 */
function jeffgeerling_preprocess_node(&$variables) {
  $node = $variables['node'];

  switch ($node->getType()) {
    case 'blog_post':
      $variables['#attached']['library'][] = 'jeffgeerling/blog';

    case 'project':
      $variables['#attached']['library'][] = 'jeffgeerling/project';

      break;
  }

  // Make 'node_bottom' region blocks available.
  $region = 'node_bottom';
  $blocks = entity_load_multiple_by_properties('block', [
    'theme' => 'jeffgeerling',
    'region' => $region,
  ]);
  uasort($blocks, 'Drupal\block\Entity\Block::sort');
  $build = array();
  foreach ($blocks as $key => $block) {
    if ($block->access('view')) {
      $build[$key] = entity_view($block, 'block');
    }
  }
  $variables[$region] = $build;

  // Add resume assets on 'About' page.
  if ($node->id() == '1') {
    $variables['#attached']['library'][] = 'jeffgeerling/resume';
  }
}

/**
 * Implements hook_views_pre_render().
 */
function jeffgeerling_views_pre_render(ViewExecutable $view) {
  if (isset($view)) {
    switch ($view->storage->id()) {
      case 'projects':
        $view->element['#attached']['library'][] = 'jeffgeerling/project';
        break;

      case 'search':
        $view->element['#attached']['library'][] = 'jeffgeerling/search';
        break;

      default:
        break;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function jeffgeerling_theme_suggestions_page_title_alter(array &$suggestions, array $variables) {
  if ($view_id = \Drupal::routeMatch()->getParameter('view_id')) {
    $suggestions[] = 'page_title__view_' . $view_id;
  }
}

/**
 * Implements template_preprocess_comment().
 */
function jeffgeerling_preprocess_comment(&$variables) {
  $comment = $variables['elements']['#comment'];

  // Build the date.
  $variables['created'] = \Drupal::service('date.formatter')->formatInterval(REQUEST_TIME - $comment
    ->getCreatedTime(), 1);

  // Build the permalink.
  $uri = $comment->permalink();
  $attributes = $uri->getOption('attributes') ?: [];
  $attributes += [
    'class' => ['permalink'],
    'rel' => 'bookmark',
  ];
  $uri->setOption('attributes', $attributes);

  // Build the 'submitted by' text.
  $variables['submitted'] = t('@author â€“ <a href=":permalink">@time ago</a>', [
    '@author' => $variables['author'],
    ':permalink' => $uri->toString(),
    '@time' => $variables['created'],
  ]);
}

/**
 * Implements theme_form_form_id_alter().
 */
function jeffgeerling_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['search_api_fulltext']['#placeholder'] = t('Enter your keywords');
}
